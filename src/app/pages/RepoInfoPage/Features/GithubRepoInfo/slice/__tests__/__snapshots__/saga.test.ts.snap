// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`getRepoById Saga should dispatch the github rate limit error 1`] = `
Object {
  "@@redux-saga/IO": true,
  "combinator": false,
  "payload": Object {
    "args": Array [
      500,
    ],
    "context": null,
    "fn": [Function],
  },
  "type": "CALL",
}
`;

exports[`getRepoById Saga should dispatch the github rate limit error 2`] = `
Object {
  "@@redux-saga/IO": true,
  "combinator": false,
  "payload": Object {
    "args": Array [],
    "selector": [Function],
  },
  "type": "SELECT",
}
`;

exports[`getRepoById Saga should dispatch the github rate limit error 3`] = `
Object {
  "@@redux-saga/IO": true,
  "combinator": false,
  "payload": Object {
    "args": Array [],
    "selector": [Function],
  },
  "type": "SELECT",
}
`;

exports[`getRepoById Saga should dispatch the github rate limit error 4`] = `
Object {
  "@@redux-saga/IO": true,
  "combinator": false,
  "payload": Object {
    "args": Array [],
    "selector": [Function],
  },
  "type": "SELECT",
}
`;

exports[`getRepoById Saga should dispatch the github rate limit error 5`] = `
Object {
  "@@redux-saga/IO": true,
  "combinator": false,
  "payload": Object {
    "args": Array [
      "https://api.github.com/users/test/repos?type=all&sort=updated",
    ],
    "context": null,
    "fn": [Function],
  },
  "type": "CALL",
}
`;

exports[`getRepoById Saga should dispatch the reposLoaded action if it requests the data without default branch unsuccessfully 1`] = `
Object {
  "@@redux-saga/IO": true,
  "combinator": false,
  "payload": Object {
    "args": Array [
      500,
    ],
    "context": null,
    "fn": [Function],
  },
  "type": "CALL",
}
`;

exports[`getRepoById Saga should dispatch the reposLoaded action if it requests the data without default branch unsuccessfully 2`] = `
Object {
  "@@redux-saga/IO": true,
  "combinator": false,
  "payload": Object {
    "args": Array [],
    "selector": [Function],
  },
  "type": "SELECT",
}
`;

exports[`getRepoById Saga should dispatch the reposLoaded action if it requests the data without default branch unsuccessfully 3`] = `
Object {
  "@@redux-saga/IO": true,
  "combinator": false,
  "payload": Object {
    "args": Array [],
    "selector": [Function],
  },
  "type": "SELECT",
}
`;

exports[`getRepoById Saga should dispatch the reposLoaded action if it requests the data without default branch unsuccessfully 4`] = `
Object {
  "@@redux-saga/IO": true,
  "combinator": false,
  "payload": Object {
    "args": Array [],
    "selector": [Function],
  },
  "type": "SELECT",
}
`;

exports[`getRepoById Saga should dispatch the reposLoaded action if it requests the repo with tree data successfully 1`] = `
Object {
  "@@redux-saga/IO": true,
  "combinator": false,
  "payload": Object {
    "args": Array [
      500,
    ],
    "context": null,
    "fn": [Function],
  },
  "type": "CALL",
}
`;

exports[`getRepoById Saga should dispatch the reposLoaded action if it requests the repo with tree data successfully 2`] = `
Object {
  "@@redux-saga/IO": true,
  "combinator": false,
  "payload": Object {
    "args": Array [],
    "selector": [Function],
  },
  "type": "SELECT",
}
`;

exports[`getRepoById Saga should dispatch the reposLoaded action if it requests the repo with tree data successfully 3`] = `
Object {
  "@@redux-saga/IO": true,
  "combinator": false,
  "payload": Object {
    "args": Array [],
    "selector": [Function],
  },
  "type": "SELECT",
}
`;

exports[`getRepoById Saga should dispatch the reposLoaded action if it requests the repo with tree data successfully 4`] = `
Object {
  "@@redux-saga/IO": true,
  "combinator": false,
  "payload": Object {
    "args": Array [],
    "selector": [Function],
  },
  "type": "SELECT",
}
`;

exports[`getRepoById Saga should dispatch the reposLoaded action if it requests the repo with tree data successfully 5`] = `
Object {
  "@@redux-saga/IO": true,
  "combinator": false,
  "payload": Object {
    "args": Array [
      "https://api.github.com/repos/test/test_repo/git/trees/main?recursive=1",
    ],
    "context": null,
    "fn": [Function],
  },
  "type": "CALL",
}
`;

exports[`getRepoById Saga should dispatch the reposLoaded action if it requests the repo with tree data successfully 6`] = `
Object {
  "@@redux-saga/IO": true,
  "combinator": false,
  "payload": Object {
    "args": Array [
      "https://api.github.com/repos/adityapandey/adventofcode/git/blobs/209f8e6e9c3cafa816f61d04eafa6c86552bf3db",
    ],
    "context": null,
    "fn": [Function],
  },
  "type": "CALL",
}
`;

exports[`getRepoById Saga should dispatch the reposLoaded action if it requests the repo without tree data unsuccessfully 1`] = `
Object {
  "@@redux-saga/IO": true,
  "combinator": false,
  "payload": Object {
    "args": Array [
      500,
    ],
    "context": null,
    "fn": [Function],
  },
  "type": "CALL",
}
`;

exports[`getRepoById Saga should dispatch the reposLoaded action if it requests the repo without tree data unsuccessfully 2`] = `
Object {
  "@@redux-saga/IO": true,
  "combinator": false,
  "payload": Object {
    "args": Array [],
    "selector": [Function],
  },
  "type": "SELECT",
}
`;

exports[`getRepoById Saga should dispatch the reposLoaded action if it requests the repo without tree data unsuccessfully 3`] = `
Object {
  "@@redux-saga/IO": true,
  "combinator": false,
  "payload": Object {
    "args": Array [],
    "selector": [Function],
  },
  "type": "SELECT",
}
`;

exports[`getRepoById Saga should dispatch the reposLoaded action if it requests the repo without tree data unsuccessfully 4`] = `
Object {
  "@@redux-saga/IO": true,
  "combinator": false,
  "payload": Object {
    "args": Array [],
    "selector": [Function],
  },
  "type": "SELECT",
}
`;

exports[`getRepoById Saga should dispatch the reposLoaded action if it requests the repo without tree data unsuccessfully 5`] = `
Object {
  "@@redux-saga/IO": true,
  "combinator": false,
  "payload": Object {
    "args": Array [
      "https://api.github.com/repos/test/test_repo/git/trees/main?recursive=1",
    ],
    "context": null,
    "fn": [Function],
  },
  "type": "CALL",
}
`;

exports[`getRepoById Saga should dispatch the response error 1`] = `
Object {
  "@@redux-saga/IO": true,
  "combinator": false,
  "payload": Object {
    "args": Array [
      500,
    ],
    "context": null,
    "fn": [Function],
  },
  "type": "CALL",
}
`;

exports[`getRepoById Saga should dispatch the response error 2`] = `
Object {
  "@@redux-saga/IO": true,
  "combinator": false,
  "payload": Object {
    "args": Array [],
    "selector": [Function],
  },
  "type": "SELECT",
}
`;

exports[`getRepoById Saga should dispatch the response error 3`] = `
Object {
  "@@redux-saga/IO": true,
  "combinator": false,
  "payload": Object {
    "args": Array [],
    "selector": [Function],
  },
  "type": "SELECT",
}
`;

exports[`getRepoById Saga should dispatch the response error 4`] = `
Object {
  "@@redux-saga/IO": true,
  "combinator": false,
  "payload": Object {
    "args": Array [],
    "selector": [Function],
  },
  "type": "SELECT",
}
`;

exports[`getRepoById Saga should dispatch the response error 5`] = `
Object {
  "@@redux-saga/IO": true,
  "combinator": false,
  "payload": Object {
    "args": Array [
      "https://api.github.com/users/test/repos?type=all&sort=updated",
    ],
    "context": null,
    "fn": [Function],
  },
  "type": "CALL",
}
`;

exports[`getRepoById Saga should dispatch the user has no repo error 1`] = `
Object {
  "@@redux-saga/IO": true,
  "combinator": false,
  "payload": Object {
    "args": Array [
      500,
    ],
    "context": null,
    "fn": [Function],
  },
  "type": "CALL",
}
`;

exports[`getRepoById Saga should dispatch the user has no repo error 2`] = `
Object {
  "@@redux-saga/IO": true,
  "combinator": false,
  "payload": Object {
    "args": Array [],
    "selector": [Function],
  },
  "type": "SELECT",
}
`;

exports[`getRepoById Saga should dispatch the user has no repo error 3`] = `
Object {
  "@@redux-saga/IO": true,
  "combinator": false,
  "payload": Object {
    "args": Array [],
    "selector": [Function],
  },
  "type": "SELECT",
}
`;

exports[`getRepoById Saga should dispatch the user has no repo error 4`] = `
Object {
  "@@redux-saga/IO": true,
  "combinator": false,
  "payload": Object {
    "args": Array [],
    "selector": [Function],
  },
  "type": "SELECT",
}
`;

exports[`getRepoById Saga should dispatch the user has no repo error 5`] = `
Object {
  "@@redux-saga/IO": true,
  "combinator": false,
  "payload": Object {
    "args": Array [
      "https://api.github.com/users/test/repos?type=all&sort=updated",
    ],
    "context": null,
    "fn": [Function],
  },
  "type": "CALL",
}
`;

exports[`getRepoById Saga should dispatch the user not found error 1`] = `
Object {
  "@@redux-saga/IO": true,
  "combinator": false,
  "payload": Object {
    "args": Array [
      500,
    ],
    "context": null,
    "fn": [Function],
  },
  "type": "CALL",
}
`;

exports[`getRepoById Saga should dispatch the user not found error 2`] = `
Object {
  "@@redux-saga/IO": true,
  "combinator": false,
  "payload": Object {
    "args": Array [],
    "selector": [Function],
  },
  "type": "SELECT",
}
`;

exports[`getRepoById Saga should dispatch the user not found error 3`] = `
Object {
  "@@redux-saga/IO": true,
  "combinator": false,
  "payload": Object {
    "args": Array [],
    "selector": [Function],
  },
  "type": "SELECT",
}
`;

exports[`getRepoById Saga should dispatch the user not found error 4`] = `
Object {
  "@@redux-saga/IO": true,
  "combinator": false,
  "payload": Object {
    "args": Array [],
    "selector": [Function],
  },
  "type": "SELECT",
}
`;

exports[`getRepoById Saga should dispatch the user not found error 5`] = `
Object {
  "@@redux-saga/IO": true,
  "combinator": false,
  "payload": Object {
    "args": Array [
      "https://api.github.com/users/test/repos?type=all&sort=updated",
    ],
    "context": null,
    "fn": [Function],
  },
  "type": "CALL",
}
`;

exports[`getRepoById Saga should return error if repoId is empty 1`] = `
Object {
  "@@redux-saga/IO": true,
  "combinator": false,
  "payload": Object {
    "args": Array [
      500,
    ],
    "context": null,
    "fn": [Function],
  },
  "type": "CALL",
}
`;

exports[`getRepoById Saga should return error if repoId is empty 2`] = `
Object {
  "@@redux-saga/IO": true,
  "combinator": false,
  "payload": Object {
    "args": Array [],
    "selector": [Function],
  },
  "type": "SELECT",
}
`;

exports[`getRepoById Saga should return error if repos is empty 1`] = `
Object {
  "@@redux-saga/IO": true,
  "combinator": false,
  "payload": Object {
    "args": Array [
      500,
    ],
    "context": null,
    "fn": [Function],
  },
  "type": "CALL",
}
`;

exports[`getRepoById Saga should return error if repos is empty 2`] = `
Object {
  "@@redux-saga/IO": true,
  "combinator": false,
  "payload": Object {
    "args": Array [],
    "selector": [Function],
  },
  "type": "SELECT",
}
`;

exports[`getRepoById Saga should return error if username is empty 1`] = `
Object {
  "@@redux-saga/IO": true,
  "combinator": false,
  "payload": Object {
    "args": Array [
      500,
    ],
    "context": null,
    "fn": [Function],
  },
  "type": "CALL",
}
`;

exports[`getRepoById Saga should return error if username is empty 2`] = `
Object {
  "@@redux-saga/IO": true,
  "combinator": false,
  "payload": Object {
    "args": Array [],
    "selector": [Function],
  },
  "type": "SELECT",
}
`;
